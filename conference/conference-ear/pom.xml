<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.prodyna.academy.pac</groupId>
		<artifactId>conference</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>conference-ear</artifactId>
	<name>conference-ear</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<version>${version.ear.plugin}</version>
				<configuration>
					<!-- Tell Maven we are using Java EE 6 -->
					<version>6</version>
					<!-- Use Java EE ear libraries as needed. Java EE ear libraries are 
						in easy way to package any libraries needed in the ear, and automatically 
						have any modules (EJB-JARs and WARs) use them -->
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<modules></modules>
					<fileNameMapping>no-version</fileNameMapping>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
			<!-- Due to Maven's lack of intelligence with EARs we need to configure 
				the jboss-as maven plugin to skip deployment for all modules. We then enable 
				it specifically in the ear module. -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<configuration>
					<filename>${project.artifactId}.ear</filename>
					<skip>false</skip>
				</configuration>
				<executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-ear-plugin</artifactId>
						<version>${version.ear.plugin}</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>





	<packaging>ear</packaging>
	<dependencies>
		<dependency>
			<groupId>com.prodyna.academy.pac</groupId>
			<artifactId>conference-conference-impl</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.prodyna.academy.pac</groupId>
			<artifactId>conference-room-impl</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.prodyna.academy.pac</groupId>
			<artifactId>conference-speaker-impl</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.prodyna.academy.pac</groupId>
			<artifactId>conference-base</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>com.prodyna.academy.pac</groupId>
			<artifactId>conference-web</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>war</type>
		</dependency>
	</dependencies>
</project>
